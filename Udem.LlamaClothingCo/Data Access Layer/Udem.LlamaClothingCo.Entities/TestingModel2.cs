//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("TestModel", "ClientClientType", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Udem.LlamaClothingCo.Entities.Client), "ClientType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Udem.LlamaClothingCo.Entities.ClientType), true)]
[assembly: EdmRelationshipAttribute("TestModel", "ItemItemType", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Udem.LlamaClothingCo.Entities.Item), "ItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Udem.LlamaClothingCo.Entities.ItemType), true)]
[assembly: EdmRelationshipAttribute("TestModel", "AddressTypeAddress", "AddressType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Udem.LlamaClothingCo.Entities.AddressType), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Udem.LlamaClothingCo.Entities.Address), true)]
[assembly: EdmRelationshipAttribute("TestModel", "ItemSaleDetail", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Udem.LlamaClothingCo.Entities.Item), "SaleDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Udem.LlamaClothingCo.Entities.SaleDetail), true)]
[assembly: EdmRelationshipAttribute("TestModel", "SaleSaleDetail", "Sale", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Udem.LlamaClothingCo.Entities.Sale), "SaleDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Udem.LlamaClothingCo.Entities.SaleDetail), true)]
[assembly: EdmRelationshipAttribute("TestModel", "SaleClient", "Sale", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Udem.LlamaClothingCo.Entities.Sale), "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Udem.LlamaClothingCo.Entities.Client), true)]
[assembly: EdmRelationshipAttribute("TestModel", "ClientBillingAddress", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Udem.LlamaClothingCo.Entities.Client), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Udem.LlamaClothingCo.Entities.Address), true)]
[assembly: EdmRelationshipAttribute("TestModel", "ShippingAddressSale", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Udem.LlamaClothingCo.Entities.Address), "Sale", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Udem.LlamaClothingCo.Entities.Sale), true)]
[assembly: EdmRelationshipAttribute("TestModel", "ShippingAddressClient", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Udem.LlamaClothingCo.Entities.Address), "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Udem.LlamaClothingCo.Entities.Client), true)]

#endregion


namespace Udem.LlamaClothingCo.Entities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TestContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TestContext object using the connection string found in the 'TestContext' section of the application configuration file.
        /// </summary>
        public TestContext() : base("name=TestContext", "TestContext")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TestContext object.
        /// </summary>
        public TestContext(string connectionString) : base(connectionString, "TestContext")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TestContext object.
        /// </summary>
        public TestContext(EntityConnection connection) : base(connection, "TestContext")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Client> Clients
        {
            get
            {
                if ((_Clients == null))
                {
                    _Clients = base.CreateObjectSet<Client>("Clients");
                }
                return _Clients;
            }
        }
        private ObjectSet<Client> _Clients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClientType> ClientTypes
        {
            get
            {
                if ((_ClientTypes == null))
                {
                    _ClientTypes = base.CreateObjectSet<ClientType>("ClientTypes");
                }
                return _ClientTypes;
            }
        }
        private ObjectSet<ClientType> _ClientTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> Items
        {
            get
            {
                if ((_Items == null))
                {
                    _Items = base.CreateObjectSet<Item>("Items");
                }
                return _Items;
            }
        }
        private ObjectSet<Item> _Items;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemType> ItemTypes
        {
            get
            {
                if ((_ItemTypes == null))
                {
                    _ItemTypes = base.CreateObjectSet<ItemType>("ItemTypes");
                }
                return _ItemTypes;
            }
        }
        private ObjectSet<ItemType> _ItemTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Address> Addresses
        {
            get
            {
                if ((_Addresses == null))
                {
                    _Addresses = base.CreateObjectSet<Address>("Addresses");
                }
                return _Addresses;
            }
        }
        private ObjectSet<Address> _Addresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AddressType> AddressTypes
        {
            get
            {
                if ((_AddressTypes == null))
                {
                    _AddressTypes = base.CreateObjectSet<AddressType>("AddressTypes");
                }
                return _AddressTypes;
            }
        }
        private ObjectSet<AddressType> _AddressTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sale> Sales
        {
            get
            {
                if ((_Sales == null))
                {
                    _Sales = base.CreateObjectSet<Sale>("Sales");
                }
                return _Sales;
            }
        }
        private ObjectSet<Sale> _Sales;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SaleDetail> SaleDetails
        {
            get
            {
                if ((_SaleDetails == null))
                {
                    _SaleDetails = base.CreateObjectSet<SaleDetail>("SaleDetails");
                }
                return _SaleDetails;
            }
        }
        private ObjectSet<SaleDetail> _SaleDetails;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Clients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClients(Client client)
        {
            base.AddObject("Clients", client);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClientTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClientTypes(ClientType clientType)
        {
            base.AddObject("ClientTypes", clientType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Items EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItems(Item item)
        {
            base.AddObject("Items", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemTypes(ItemType itemType)
        {
            base.AddObject("ItemTypes", itemType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Addresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddresses(Address address)
        {
            base.AddObject("Addresses", address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AddressTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddressTypes(AddressType addressType)
        {
            base.AddObject("AddressTypes", addressType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sales EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSales(Sale sale)
        {
            base.AddObject("Sales", sale);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SaleDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSaleDetails(SaleDetail saleDetail)
        {
            base.AddObject("SaleDetails", saleDetail);
        }

        #endregion

    }
    

    #endregion

    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestModel", Name="Address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Address object.
        /// </summary>
        /// <param name="addressId">Initial value of the AddressId property.</param>
        /// <param name="street">Initial value of the Street property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="zipCode">Initial value of the ZipCode property.</param>
        /// <param name="addressTypeId">Initial value of the AddressTypeId property.</param>
        /// <param name="isAddressActive">Initial value of the IsAddressActive property.</param>
        public static Address CreateAddress(global::System.Int32 addressId, global::System.String street, global::System.Int32 number, global::System.String city, global::System.String state, global::System.Int32 zipCode, global::System.Int32 addressTypeId, global::System.Boolean isAddressActive)
        {
            Address address = new Address();
            address.AddressId = addressId;
            address.Street = street;
            address.Number = number;
            address.City = city;
            address.State = state;
            address.ZipCode = zipCode;
            address.AddressTypeId = addressTypeId;
            address.IsAddressActive = isAddressActive;
            return address;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressId
        {
            get
            {
                return _AddressId;
            }
            set
            {
                if (_AddressId != value)
                {
                    OnAddressIdChanging(value);
                    ReportPropertyChanging("AddressId");
                    _AddressId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressId");
                    OnAddressIdChanged();
                }
            }
        }
        private global::System.Int32 _AddressId;
        partial void OnAddressIdChanging(global::System.Int32 value);
        partial void OnAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.Int32 _ZipCode;
        partial void OnZipCodeChanging(global::System.Int32 value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressTypeId
        {
            get
            {
                return _AddressTypeId;
            }
            set
            {
                OnAddressTypeIdChanging(value);
                ReportPropertyChanging("AddressTypeId");
                _AddressTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressTypeId");
                OnAddressTypeIdChanged();
            }
        }
        private global::System.Int32 _AddressTypeId;
        partial void OnAddressTypeIdChanging(global::System.Int32 value);
        partial void OnAddressTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAddressActive
        {
            get
            {
                return _IsAddressActive;
            }
            set
            {
                OnIsAddressActiveChanging(value);
                ReportPropertyChanging("IsAddressActive");
                _IsAddressActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAddressActive");
                OnIsAddressActiveChanged();
            }
        }
        private global::System.Boolean _IsAddressActive;
        partial void OnIsAddressActiveChanging(global::System.Boolean value);
        partial void OnIsAddressActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "AddressTypeAddress", "AddressType")]
        public AddressType AddressType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressType>("TestModel.AddressTypeAddress", "AddressType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressType>("TestModel.AddressTypeAddress", "AddressType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AddressType> AddressTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressType>("TestModel.AddressTypeAddress", "AddressType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AddressType>("TestModel.AddressTypeAddress", "AddressType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "ClientBillingAddress", "Client")]
        public EntityCollection<Client> Clients_Billing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Client>("TestModel.ClientBillingAddress", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Client>("TestModel.ClientBillingAddress", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "ShippingAddressSale", "Sale")]
        public EntityCollection<Sale> Sales
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sale>("TestModel.ShippingAddressSale", "Sale");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sale>("TestModel.ShippingAddressSale", "Sale", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "ShippingAddressClient", "Client")]
        public EntityCollection<Client> Clients_Shipping
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Client>("TestModel.ShippingAddressClient", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Client>("TestModel.ShippingAddressClient", "Client", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestModel", Name="AddressType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AddressType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AddressType object.
        /// </summary>
        /// <param name="addressTypeId">Initial value of the AddressTypeId property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="isAddressTypeActive">Initial value of the IsAddressTypeActive property.</param>
        public static AddressType CreateAddressType(global::System.Int32 addressTypeId, global::System.String typeName, global::System.String description, global::System.Boolean isAddressTypeActive)
        {
            AddressType addressType = new AddressType();
            addressType.AddressTypeId = addressTypeId;
            addressType.TypeName = typeName;
            addressType.Description = description;
            addressType.IsAddressTypeActive = isAddressTypeActive;
            return addressType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressTypeId
        {
            get
            {
                return _AddressTypeId;
            }
            set
            {
                if (_AddressTypeId != value)
                {
                    OnAddressTypeIdChanging(value);
                    ReportPropertyChanging("AddressTypeId");
                    _AddressTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressTypeId");
                    OnAddressTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _AddressTypeId;
        partial void OnAddressTypeIdChanging(global::System.Int32 value);
        partial void OnAddressTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAddressTypeActive
        {
            get
            {
                return _IsAddressTypeActive;
            }
            set
            {
                OnIsAddressTypeActiveChanging(value);
                ReportPropertyChanging("IsAddressTypeActive");
                _IsAddressTypeActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAddressTypeActive");
                OnIsAddressTypeActiveChanged();
            }
        }
        private global::System.Boolean _IsAddressTypeActive;
        partial void OnIsAddressTypeActiveChanging(global::System.Boolean value);
        partial void OnIsAddressTypeActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "AddressTypeAddress", "Address")]
        public EntityCollection<Address> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("TestModel.AddressTypeAddress", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("TestModel.AddressTypeAddress", "Address", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestModel", Name="Client")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Client : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Client object.
        /// </summary>
        /// <param name="clientId">Initial value of the ClientId property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="rFC">Initial value of the RFC property.</param>
        /// <param name="billingAddressId">Initial value of the BillingAddressId property.</param>
        /// <param name="clientTypeId">Initial value of the ClientTypeId property.</param>
        /// <param name="isClientActive">Initial value of the IsClientActive property.</param>
        /// <param name="telephoneNumber">Initial value of the TelephoneNumber property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="shippingAddressId">Initial value of the ShippingAddressId property.</param>
        public static Client CreateClient(global::System.Int32 clientId, global::System.String firstName, global::System.String lastName, global::System.String rFC, global::System.Int32 billingAddressId, global::System.Int32 clientTypeId, global::System.Boolean isClientActive, global::System.String telephoneNumber, global::System.String email, global::System.String password, global::System.Int32 shippingAddressId)
        {
            Client client = new Client();
            client.ClientId = clientId;
            client.FirstName = firstName;
            client.LastName = lastName;
            client.RFC = rFC;
            client.BillingAddressId = billingAddressId;
            client.ClientTypeId = clientTypeId;
            client.IsClientActive = isClientActive;
            client.TelephoneNumber = telephoneNumber;
            client.Email = email;
            client.Password = password;
            client.ShippingAddressId = shippingAddressId;
            return client;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                if (_ClientId != value)
                {
                    OnClientIdChanging(value);
                    ReportPropertyChanging("ClientId");
                    _ClientId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClientId");
                    OnClientIdChanged();
                }
            }
        }
        private global::System.Int32 _ClientId;
        partial void OnClientIdChanging(global::System.Int32 value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RFC
        {
            get
            {
                return _RFC;
            }
            set
            {
                OnRFCChanging(value);
                ReportPropertyChanging("RFC");
                _RFC = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RFC");
                OnRFCChanged();
            }
        }
        private global::System.String _RFC;
        partial void OnRFCChanging(global::System.String value);
        partial void OnRFCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BillingAddressId
        {
            get
            {
                return _BillingAddressId;
            }
            set
            {
                OnBillingAddressIdChanging(value);
                ReportPropertyChanging("BillingAddressId");
                _BillingAddressId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BillingAddressId");
                OnBillingAddressIdChanged();
            }
        }
        private global::System.Int32 _BillingAddressId;
        partial void OnBillingAddressIdChanging(global::System.Int32 value);
        partial void OnBillingAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientTypeId
        {
            get
            {
                return _ClientTypeId;
            }
            set
            {
                OnClientTypeIdChanging(value);
                ReportPropertyChanging("ClientTypeId");
                _ClientTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientTypeId");
                OnClientTypeIdChanged();
            }
        }
        private global::System.Int32 _ClientTypeId;
        partial void OnClientTypeIdChanging(global::System.Int32 value);
        partial void OnClientTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsClientActive
        {
            get
            {
                return _IsClientActive;
            }
            set
            {
                OnIsClientActiveChanging(value);
                ReportPropertyChanging("IsClientActive");
                _IsClientActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsClientActive");
                OnIsClientActiveChanged();
            }
        }
        private global::System.Boolean _IsClientActive;
        partial void OnIsClientActiveChanging(global::System.Boolean value);
        partial void OnIsClientActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TelephoneNumber
        {
            get
            {
                return _TelephoneNumber;
            }
            set
            {
                OnTelephoneNumberChanging(value);
                ReportPropertyChanging("TelephoneNumber");
                _TelephoneNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TelephoneNumber");
                OnTelephoneNumberChanged();
            }
        }
        private global::System.String _TelephoneNumber;
        partial void OnTelephoneNumberChanging(global::System.String value);
        partial void OnTelephoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ShippingAddressId
        {
            get
            {
                return _ShippingAddressId;
            }
            set
            {
                OnShippingAddressIdChanging(value);
                ReportPropertyChanging("ShippingAddressId");
                _ShippingAddressId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShippingAddressId");
                OnShippingAddressIdChanged();
            }
        }
        private global::System.Int32 _ShippingAddressId;
        partial void OnShippingAddressIdChanging(global::System.Int32 value);
        partial void OnShippingAddressIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "ClientClientType", "ClientType")]
        public ClientType ClientType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientType>("TestModel.ClientClientType", "ClientType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientType>("TestModel.ClientClientType", "ClientType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClientType> ClientTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientType>("TestModel.ClientClientType", "ClientType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClientType>("TestModel.ClientClientType", "ClientType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "SaleClient", "Sale")]
        public EntityCollection<Sale> Sales
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sale>("TestModel.SaleClient", "Sale");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sale>("TestModel.SaleClient", "Sale", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "ClientBillingAddress", "Address")]
        public Address BillingAddress
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("TestModel.ClientBillingAddress", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("TestModel.ClientBillingAddress", "Address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> BillingAddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("TestModel.ClientBillingAddress", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("TestModel.ClientBillingAddress", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "ShippingAddressClient", "Address")]
        public Address ShippingAddress
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("TestModel.ShippingAddressClient", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("TestModel.ShippingAddressClient", "Address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> ShippingAddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("TestModel.ShippingAddressClient", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("TestModel.ShippingAddressClient", "Address", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestModel", Name="ClientType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClientType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClientType object.
        /// </summary>
        /// <param name="clientTypeId">Initial value of the ClientTypeId property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="isClientTypeActive">Initial value of the IsClientTypeActive property.</param>
        public static ClientType CreateClientType(global::System.Int32 clientTypeId, global::System.String typeName, global::System.String description, global::System.Boolean isClientTypeActive)
        {
            ClientType clientType = new ClientType();
            clientType.ClientTypeId = clientTypeId;
            clientType.TypeName = typeName;
            clientType.Description = description;
            clientType.IsClientTypeActive = isClientTypeActive;
            return clientType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientTypeId
        {
            get
            {
                return _ClientTypeId;
            }
            set
            {
                if (_ClientTypeId != value)
                {
                    OnClientTypeIdChanging(value);
                    ReportPropertyChanging("ClientTypeId");
                    _ClientTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClientTypeId");
                    OnClientTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ClientTypeId;
        partial void OnClientTypeIdChanging(global::System.Int32 value);
        partial void OnClientTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsClientTypeActive
        {
            get
            {
                return _IsClientTypeActive;
            }
            set
            {
                OnIsClientTypeActiveChanging(value);
                ReportPropertyChanging("IsClientTypeActive");
                _IsClientTypeActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsClientTypeActive");
                OnIsClientTypeActiveChanged();
            }
        }
        private global::System.Boolean _IsClientTypeActive;
        partial void OnIsClientTypeActiveChanging(global::System.Boolean value);
        partial void OnIsClientTypeActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "ClientClientType", "Client")]
        public EntityCollection<Client> Clients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Client>("TestModel.ClientClientType", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Client>("TestModel.ClientClientType", "Client", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestModel", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Item object.
        /// </summary>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        /// <param name="itemTypeId">Initial value of the ItemTypeId property.</param>
        /// <param name="isItemActive">Initial value of the IsItemActive property.</param>
        public static Item CreateItem(global::System.Int32 itemId, global::System.String name, global::System.String description, global::System.Decimal cost, global::System.Int32 itemTypeId, global::System.Boolean isItemActive)
        {
            Item item = new Item();
            item.ItemId = itemId;
            item.Name = name;
            item.Description = description;
            item.Cost = cost;
            item.ItemTypeId = itemTypeId;
            item.IsItemActive = isItemActive;
            return item;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                if (_ItemId != value)
                {
                    OnItemIdChanging(value);
                    ReportPropertyChanging("ItemId");
                    _ItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemId");
                    OnItemIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Decimal _Cost;
        partial void OnCostChanging(global::System.Decimal value);
        partial void OnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemTypeId
        {
            get
            {
                return _ItemTypeId;
            }
            set
            {
                OnItemTypeIdChanging(value);
                ReportPropertyChanging("ItemTypeId");
                _ItemTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemTypeId");
                OnItemTypeIdChanged();
            }
        }
        private global::System.Int32 _ItemTypeId;
        partial void OnItemTypeIdChanging(global::System.Int32 value);
        partial void OnItemTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsItemActive
        {
            get
            {
                return _IsItemActive;
            }
            set
            {
                OnIsItemActiveChanging(value);
                ReportPropertyChanging("IsItemActive");
                _IsItemActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsItemActive");
                OnIsItemActiveChanged();
            }
        }
        private global::System.Boolean _IsItemActive;
        partial void OnIsItemActiveChanging(global::System.Boolean value);
        partial void OnIsItemActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "ItemItemType", "ItemType")]
        public ItemType ItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("TestModel.ItemItemType", "ItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("TestModel.ItemItemType", "ItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemType> ItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("TestModel.ItemItemType", "ItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemType>("TestModel.ItemItemType", "ItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "ItemSaleDetail", "SaleDetail")]
        public EntityCollection<SaleDetail> SaleDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SaleDetail>("TestModel.ItemSaleDetail", "SaleDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SaleDetail>("TestModel.ItemSaleDetail", "SaleDetail", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestModel", Name="ItemType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemType object.
        /// </summary>
        /// <param name="itemTypeId">Initial value of the ItemTypeId property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="isItemTypeActive">Initial value of the IsItemTypeActive property.</param>
        public static ItemType CreateItemType(global::System.Int32 itemTypeId, global::System.String typeName, global::System.String description, global::System.Boolean isItemTypeActive)
        {
            ItemType itemType = new ItemType();
            itemType.ItemTypeId = itemTypeId;
            itemType.TypeName = typeName;
            itemType.Description = description;
            itemType.IsItemTypeActive = isItemTypeActive;
            return itemType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemTypeId
        {
            get
            {
                return _ItemTypeId;
            }
            set
            {
                if (_ItemTypeId != value)
                {
                    OnItemTypeIdChanging(value);
                    ReportPropertyChanging("ItemTypeId");
                    _ItemTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemTypeId");
                    OnItemTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemTypeId;
        partial void OnItemTypeIdChanging(global::System.Int32 value);
        partial void OnItemTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsItemTypeActive
        {
            get
            {
                return _IsItemTypeActive;
            }
            set
            {
                OnIsItemTypeActiveChanging(value);
                ReportPropertyChanging("IsItemTypeActive");
                _IsItemTypeActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsItemTypeActive");
                OnIsItemTypeActiveChanged();
            }
        }
        private global::System.Boolean _IsItemTypeActive;
        partial void OnIsItemTypeActiveChanging(global::System.Boolean value);
        partial void OnIsItemTypeActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "ItemItemType", "Item")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("TestModel.ItemItemType", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("TestModel.ItemItemType", "Item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestModel", Name="Sale")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sale : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sale object.
        /// </summary>
        /// <param name="saleId">Initial value of the SaleId property.</param>
        /// <param name="clientId">Initial value of the ClientId property.</param>
        /// <param name="saleTotal">Initial value of the SaleTotal property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="shippingAddressId">Initial value of the ShippingAddressId property.</param>
        public static Sale CreateSale(global::System.Int32 saleId, global::System.Int32 clientId, global::System.Decimal saleTotal, global::System.DateTime date, global::System.Int32 shippingAddressId)
        {
            Sale sale = new Sale();
            sale.SaleId = saleId;
            sale.ClientId = clientId;
            sale.SaleTotal = saleTotal;
            sale.Date = date;
            sale.ShippingAddressId = shippingAddressId;
            return sale;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SaleId
        {
            get
            {
                return _SaleId;
            }
            set
            {
                if (_SaleId != value)
                {
                    OnSaleIdChanging(value);
                    ReportPropertyChanging("SaleId");
                    _SaleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SaleId");
                    OnSaleIdChanged();
                }
            }
        }
        private global::System.Int32 _SaleId;
        partial void OnSaleIdChanging(global::System.Int32 value);
        partial void OnSaleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private global::System.Int32 _ClientId;
        partial void OnClientIdChanging(global::System.Int32 value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SaleTotal
        {
            get
            {
                return _SaleTotal;
            }
            set
            {
                OnSaleTotalChanging(value);
                ReportPropertyChanging("SaleTotal");
                _SaleTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleTotal");
                OnSaleTotalChanged();
            }
        }
        private global::System.Decimal _SaleTotal;
        partial void OnSaleTotalChanging(global::System.Decimal value);
        partial void OnSaleTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ShippingAddressId
        {
            get
            {
                return _ShippingAddressId;
            }
            set
            {
                OnShippingAddressIdChanging(value);
                ReportPropertyChanging("ShippingAddressId");
                _ShippingAddressId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShippingAddressId");
                OnShippingAddressIdChanged();
            }
        }
        private global::System.Int32 _ShippingAddressId;
        partial void OnShippingAddressIdChanging(global::System.Int32 value);
        partial void OnShippingAddressIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "SaleSaleDetail", "SaleDetail")]
        public EntityCollection<SaleDetail> SaleDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SaleDetail>("TestModel.SaleSaleDetail", "SaleDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SaleDetail>("TestModel.SaleSaleDetail", "SaleDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "SaleClient", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("TestModel.SaleClient", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("TestModel.SaleClient", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("TestModel.SaleClient", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("TestModel.SaleClient", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "ShippingAddressSale", "Address")]
        public Address ShippingAddress
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("TestModel.ShippingAddressSale", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("TestModel.ShippingAddressSale", "Address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> ShippingAddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("TestModel.ShippingAddressSale", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("TestModel.ShippingAddressSale", "Address", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestModel", Name="SaleDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SaleDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SaleDetail object.
        /// </summary>
        /// <param name="saleId">Initial value of the SaleId property.</param>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static SaleDetail CreateSaleDetail(global::System.Int32 saleId, global::System.Int32 itemId, global::System.Int32 quantity)
        {
            SaleDetail saleDetail = new SaleDetail();
            saleDetail.SaleId = saleId;
            saleDetail.ItemId = itemId;
            saleDetail.Quantity = quantity;
            return saleDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SaleId
        {
            get
            {
                return _SaleId;
            }
            set
            {
                if (_SaleId != value)
                {
                    OnSaleIdChanging(value);
                    ReportPropertyChanging("SaleId");
                    _SaleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SaleId");
                    OnSaleIdChanged();
                }
            }
        }
        private global::System.Int32 _SaleId;
        partial void OnSaleIdChanging(global::System.Int32 value);
        partial void OnSaleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                if (_ItemId != value)
                {
                    OnItemIdChanging(value);
                    ReportPropertyChanging("ItemId");
                    _ItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemId");
                    OnItemIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "ItemSaleDetail", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("TestModel.ItemSaleDetail", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("TestModel.ItemSaleDetail", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("TestModel.ItemSaleDetail", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("TestModel.ItemSaleDetail", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TestModel", "SaleSaleDetail", "Sale")]
        public Sale Sale
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sale>("TestModel.SaleSaleDetail", "Sale").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sale>("TestModel.SaleSaleDetail", "Sale").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sale> SaleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sale>("TestModel.SaleSaleDetail", "Sale");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sale>("TestModel.SaleSaleDetail", "Sale", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
